# Generated by Django 4.0.1 on 2022-01-28 07:54

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import employees.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название отдела')),
            ],
            options={
                'verbose_name': 'Отдел',
                'verbose_name_plural': 'Отделы',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя сотрудника')),
                ('patronymic', models.CharField(max_length=100, verbose_name='Отчество сотрудника')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия сотрудника')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='Адрес электронной почты')),
                ('is_staff', models.BooleanField(default=False, help_text='Разрешает пользоваться админкой', verbose_name='Администратор')),
                ('is_active', models.BooleanField(default=True, help_text='Разрешает совершать заказы', verbose_name='Действующий сотрудник')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=7, verbose_name='Баланс')),
                ('overdraft', models.BooleanField(default=False, verbose_name='Разрешить отрицательный баланс')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Последнее посещение')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='employees.department', verbose_name='Название отдела')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
                'ordering': ('last_name', 'first_name', 'patronymic'),
            },
            managers=[
                ('objects', employees.managers.UserManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='employer',
            constraint=models.CheckConstraint(check=models.Q(('balance__gte', 0), ('overdraft', True), _connector='OR'), name='Отрицательный баланс не разрешён'),
        ),
    ]
